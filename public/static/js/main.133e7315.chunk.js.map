{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.jsx","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/PrivateRoute.jsx","router/PublicRoute.jsx","router/AppRouter.jsx","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducers.js","reducers/rootReducers.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"6OAAMA,EAAUC,gDAGVC,EAAgB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MACvCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAO5BQ,EAAgB,SAAET,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MACvCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,MCvCrBY,EAEI,kBAFJA,EAGK,mBAHLA,EAKO,qBALPA,EAMI,uBANJA,EAQI,kBARJA,EASc,6BATdA,EAUI,wBAVJA,EAWI,wBAXJA,EAYI,wBAZJA,EAcW,qCAdXA,EAgBE,eAhBFA,EAmBG,gB,wBChBHC,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GAEnC,OAAOA,EAAOC,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEIC,IAAKC,IAAQF,EAAEC,KAAME,SACrBC,MAAOF,IAAQF,EAAEI,OAAQD,eCwB/BE,EAAc,SAACC,GAAD,MAAY,CAE5BC,KAAMX,EACNY,QAASF,IAQAG,EAAwB,iBAAO,CACxCF,KAAMX,IAyBJc,EAAe,SAAEJ,GAAF,MAAc,CAE/BC,KAAMX,EACNY,QAASF,IA2BPK,EAAe,iBAAO,CAExBJ,KAAMX,IAqBJgB,EAAc,SAACd,GAAD,MAAa,CAC7BS,KAAMX,EACNY,QAASV,ICrDPe,EAAiB,iBAAO,CAC1BN,KAAMX,IAIJkB,EAAQ,SAAEC,GAAF,MAAa,CACvBR,KAAMX,EACNY,QAASO,IAIAC,EAAc,WACvB,OAAO,SAACC,GAEJvB,aAAawB,QACbD,EDyC0B,CAC9BV,KAAMX,ICzCFqB,EAAUE,OAKZA,EAAS,iBAAO,CAClBZ,KAAMX,I,gBC3FGwB,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,eCoHzBK,EAlIK,WAEhB,IAAMb,EAAWc,cAEjB,EAAoDX,EAAQ,CACxDY,OAAQ,GACRC,UAAW,KAFf,mBAAQC,EAAR,KAAyBC,EAAzB,KAKA,EAA0Df,EAAQ,CAC9DgB,MAAO,GACPC,OAAQ,GACRC,WAAY,GACZC,WAAY,KAJhB,mBAAQC,EAAR,KAA4BC,EAA5B,KAOQT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UACRG,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAmBnC,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAOC,SAtBH,SAAE3C,GFnBA,IAAE4C,EAAOC,EEoB3B7C,EAAE8C,iBAEF7B,GFtBoB2B,EEsBEZ,EFtBKa,EEsBGZ,EFrBlC,uCAAO,WAAMhB,GAAN,iBAAA8B,EAAA,sEAEgBjE,EAAe,OAAQ,CAAC8D,QAAOC,YAAW,QAF1D,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5D,EAHH,QAKM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAAUH,EAAM,CACZwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGf2B,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAd9B,2CAAP,yDEwCgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQG,EACR2B,SAAWxB,MAGnB,qBAAKO,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAQI,EACR0B,SAAWxB,MAGnB,qBAAKO,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAjDC,SAAE3C,GAGrB,GAFAA,EAAE8C,iBAEER,IAAeC,EACf,OAAOgB,IAAKC,KAAK,QAAS,0CAAwC,SFPjD,IAAE5B,EAAMgB,EAAOC,EEUpC5B,GFVuBW,EEUEQ,EFVIQ,EEUGP,EFVIQ,EEUIP,EFT5C,uCAAO,WAAMrB,GAAN,iBAAA8B,EAAA,sEAEgBjE,EAAe,WAAY,CAAC8C,OAAMgB,QAAOC,YAAW,QAFpE,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5D,EAHH,QAKM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAAUH,EAAM,CACZwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGf2B,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAd9B,2CAAP,yDEmDgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAAQO,EACRuB,SAAWlB,MAGnB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,QACLmC,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQQ,EACRsB,SAAWlB,MAGnB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,aACLC,MAAQS,EACRqB,SAAWlB,MAInB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAAQU,EACRoB,SAAWlB,MAInB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,+B,QCjGvB+B,G,MA1BA,WAEX,IAAQhC,EAASiC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCnC,KACFX,EAAWc,cAMjB,OACI,sBAAKW,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAGL,yBACIc,UAAU,yBACVsB,QAZS,WACjB/C,EAAUD,MASN,UAII,mBAAG0B,UAAU,wBACb,kDCzBHuB,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNrE,MAAO,SACPsE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCCJC,G,MAZO,SAAC,GAAe,IAAbzE,EAAY,EAAZA,MAEb0E,EAAgB1E,EAAhB0E,MAAOjE,EAAST,EAATS,KAEf,OACI,gCACI,mCAAUiE,EAAV,OACA,sCAAUjE,EAAKa,a,mCCLdqD,GAAc,iBAAO,CAC9B1E,KAAMX,ICKJsF,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGjBC,IAAMC,cAAc,SAEpB,IAAMC,GAAM1F,MAAS2F,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAE,SAE7BG,GAAY,CACdlB,MAAO,GACPmB,MAAO,GACP/F,MAAOwF,GAAIzF,SACXF,IAAK+F,GAAS7F,UAgKHiG,GA5JO,WAElB,IAAMnF,EAAWc,cACTsE,EAAcxC,aAAY,SAAAC,GAAK,OAAIA,EAAMwC,MAAzCD,UACAE,EAAgB1C,aAAY,SAAAC,GAAK,OAAIA,EAAM0C,YAA3CD,YAER,EAAoCjF,mBAAUsE,GAAIzF,UAAlD,mBAAQsG,EAAR,KAAmBC,EAAnB,KACA,EAAgCpF,mBAAU0E,GAAS7F,UAAnD,mBAAQwG,EAAR,KAAiBC,EAAjB,KACA,EAAoCtF,oBAAS,GAA7C,mBAAOuF,EAAP,KAAmBC,EAAnB,KAEA,EAAoCxF,mBAAS4E,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAEQb,EAA6BY,EAA7BZ,MAAOnB,EAAsB+B,EAAtB/B,MAAO5E,EAAe2G,EAAf3G,MAAOH,EAAQ8G,EAAR9G,IAG7BgH,qBAAU,WAEFD,EADCT,GAGcL,MAEpB,CAACK,EAAaS,IAGjB,IAAMtF,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBqF,EAAc,2BACPD,GADM,kBAERpF,EAAOC,KAAOD,EAAOE,UAIxBqF,EAAa,WACfjG,EDzD2B,CAC/BV,KAAMX,ICyDFqB,EAAUR,KACVuG,EAAed,KA2CnB,OACI,eAAC,IAAD,CACEiB,OAASd,EAETe,eAAiBF,EACjBG,MAAOnC,GACPoC,eAAiB,IACjB5E,UAAU,QACV6E,iBAAiB,cAPnB,UAUI,mCAAQhB,EAAe,gBAAkB,eAAzC,OACA,uBACA,uBACI7D,UAAU,YACVC,SAvCa,SAAC3C,GACtBA,EAAE8C,iBACF,IRxCyBxC,EQwCnBkH,EAActH,IAAQE,GACtBqH,EAAYvH,IAAQD,GAE1B,OAAIuH,EAAYE,cAAeD,GACpBlE,IAAKC,KAAK,QAAS,mDAAoD,SAG9EwB,EAAM2C,OAAOC,OAAS,EACfd,GAAc,IAIrB7F,EADAsF,GRnDqBjG,EQoDOyG,ERlDpC,uCAAO,WAAM9F,GAAN,iBAAA8B,EAAA,+EAIoBvD,EAAc,UAAD,OAAYc,EAAMuH,IAAOvH,EAAO,OAJjE,cAIO0C,EAJP,gBAKoBA,EAAKC,OALzB,QAKO5D,EALP,QAOS6D,GACJjC,EAAUP,EAAaJ,IAEvBiD,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAVlC,kDAcCqE,QAAQC,IAAR,MAdD,0DAAP,uDA1C4B,SAACzH,GAC7B,8CAAO,WAAMW,EAAU+G,GAAhB,uBAAAjF,EAAA,+DAEmBiF,IAAWjE,KAAzBT,EAFL,EAEKA,IAAK1B,EAFV,EAEUA,KAFV,kBAKoBpC,EAAc,SAAUc,EAAO,QALnD,cAKO0C,EALP,gBAMoBA,EAAKC,OANzB,QAMO5D,EANP,QAQU6D,KACL5C,EAAMuH,GAAKxI,EAAK4I,OAAOJ,GACvBvH,EAAMS,KAAO,CACTmH,IAAK5E,EACL1B,KAAMA,GAGVX,EAAUZ,EAAYC,KAf3B,kDAkBCwH,QAAQC,IAAR,MAlBD,0DAAP,wDQ6FkBI,CAAiBpB,IAG/BD,GAAc,QACdI,MAiBI,UAKI,sBAAKxE,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIiB,SA7DU,SAAC3D,GAC3B0G,EAAc1G,GACdgH,EAAc,2BACPD,GADM,IAET3G,MAAOJ,MA0DK6B,MAAQ4E,EACR/D,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIiB,SA9DQ,SAAC3D,GACzB4G,EAAY5G,GACZgH,EAAc,2BACPD,GADM,IAET9G,IAAKD,MA2DO6B,MAAQ8E,EACRyB,QAAU3B,EACV/D,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACInC,KAAK,OACLmC,UAAS,wBAAoBmE,GAAc,cAC3CnD,YAAY,uBACZ9B,KAAK,QACLC,MAAQmD,EACRrB,SAAWjC,EACX2G,aAAa,QAEjB,uBAAOR,GAAG,YAAYnF,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,QACZ4E,KAAK,IACL1G,KAAK,QACLC,MAAQsE,EACRxC,SAAWjC,IAEf,uBAAOmG,GAAG,YAAYnF,UAAU,uBAAhC,yCAGJ,yBACInC,KAAK,SACLmC,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDC/JL6F,GAjBG,WAEd,IAAMtH,EAAWc,cAKjB,OACI,wBACIW,UAAU,sBACVsB,QAPe,WACnB/C,EAAUgE,OAIV,SAII,mBAAGvC,UAAU,mBCOV8F,GAnBQ,WAEnB,IAAMvH,EAAWc,cAMjB,OACI,yBACIW,UAAU,mCACVsB,QAPa,WACjB/C,EVqEJ,uCAAO,WAAMA,EAAU+G,GAAhB,mBAAAjF,EAAA,6DAEIwD,EAAeyB,IAAWxB,SAA1BD,YAFJ,kBAMoB/G,EAAc,UAAD,OAAY+G,EAAYsB,IAAO,GAAI,UANpE,cAMO7E,EANP,gBAOoBA,EAAKC,OAPzB,QAOO5D,EAPP,QASS6D,GACJjC,EAAUN,KAEV4C,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAZlC,kDAgBCqE,QAAQC,IAAR,MAhBD,0DAAP,0DUjEI,UAII,mBAAGrF,UAAU,iBACb,sDCDZxC,IAAOuI,OAAO,MACd,IAAMC,GAAYC,YAAgBzI,KAkFnB0I,GAhFQ,WAEnB,IAAM3H,EAAWc,cACjB,EAAgC8B,aAAY,SAAAC,GAAK,OAAIA,EAAM0C,YAAnD1G,EAAR,EAAQA,OAAQyG,EAAhB,EAAgBA,YACRjD,EAAQO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCT,IAER,EAAgChC,mBAAU5B,aAAaC,QAAQ,aAAe,SAA9E,mBAAOkJ,EAAP,KAAiBC,EAAjB,KAEA7B,qBAAU,WACNhG,EX6EJ,uCAAO,WAAMA,GAAN,mBAAA8B,EAAA,+EAIoBvD,EAAc,UAJlC,cAIOwD,EAJP,gBAKoBA,EAAKC,OALzB,OAKO5D,EALP,OAOOS,EAASD,EAAeR,EAAK0J,SACnC9H,EAAUL,EAAYd,IARvB,kDAWCgI,QAAQC,IAAR,MAXD,0DAAP,yDW5EG,CAAC9G,IAqCJ,OACI,sBAAKyB,UAAU,kBAAf,UACI,cAAC,EAAD,IAEA,cAAC,IAAD,CACIgG,UAAYA,GACZ5I,OAASA,EACTkJ,cAAc,QACdC,YAAY,MACZhF,SAAWA,EACXiF,gBA3Ba,SAAE5I,EAAOF,EAAOH,EAAKkJ,GAY1C,MAAO,CACH9B,MATU,CACV+B,gBAAmB9F,IAAQhD,EAAMS,KAAKmH,IAAQ,UAAY,UAC1DmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAmBHC,mBA9CU,WAClBxI,EAAUgE,OA8CFyE,cA3CU,SAAE1J,GACpBiB,EXEkC,CACtCV,KAAMX,EACNY,QWJ6BR,KA2CjB2J,OAxCS,SAAE3J,GACnB8I,EAAY9I,GACZN,aAAayD,QAAQ,WAAYnD,IAuCzB4J,aApCS,SAAC5J,GAElBiB,EAAUR,MAmCFoJ,YAAa,EACbC,KAAOjB,EACPkB,WAAY,CACRzJ,MAAOyE,KAIf,cAAC,GAAD,IAGKwB,GAAgB,cAAC,GAAD,IAGrB,cAAC,GAAD,Q,4CCrEGyD,GAtBM,SAAC,GAIf,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACI,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gB,mCCUpBC,GArBK,SAAC,GAId,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACI,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAeG,SCsCtBG,GAtCG,WAEd,IAAMvJ,EAAWc,cACjB,EAA0B8B,aAAa,SAAAC,GAAK,OAAIA,EAAMC,QAA9C0G,EAAR,EAAQA,SAAUnH,EAAlB,EAAkBA,IAMlB,OAJA2D,qBAAU,WACNhG,EbgCJ,uCAAO,WAAMA,GAAN,iBAAA8B,EAAA,sEAEgBvD,EAAe,cAF/B,cAEGwD,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5D,EAHH,QAKM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAAUH,EAAM,CACZwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGfX,EAAUJ,KAdX,2CAAP,yDa/BG,CAACI,IAEAwJ,EACM,qDAIN,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACI,cAAC,GAAD,CACEC,OAAK,EACLC,KAAK,SACLR,UAAYrI,EACZmI,kBAAoB3G,IAGtB,cAAC,GAAD,CACEoH,OAAK,EACLC,KAAK,IACLR,UAAYvB,GACZqB,kBAAoB3G,IAGtB,cAAC,IAAD,CAAUgH,GAAG,c,kBC3CvBjJ,GAAe,CACjBoJ,UAAU,G,SCWRpJ,GAAe,CACjBvB,OAAQ,GACRyG,YAAa,MCdXlF,GAAe,CACjBgF,WAAW,GCIFuE,GAAcC,aAAgB,CACvCvE,GDDqB,WAAqC,IAAnCxC,EAAkC,uDAA1BzC,GAAcyJ,EAAY,uCAEzD,OAASA,EAAOvK,MACZ,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEIuC,WAAW,IAGnB,KAAKzG,EACD,OAAO,2BACAkE,GADP,IAEIuC,WAAW,IAGnB,QACI,OAAOvC,ICdf0C,SFW2B,WAAqC,IAAnC1C,EAAkC,uDAA1BzC,GAAcyJ,EAAY,uCAE/D,OAASA,EAAOvK,MACZ,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEIyC,YAAauE,EAAOtK,UAG5B,KAAKZ,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAO,GAAD,oBACCgE,EAAMhE,QADP,CAEFgL,EAAOtK,YAInB,KAAKZ,EACD,OAAO,2BACAkE,GADP,IAEIyC,YAAa,OAGrB,KAAK3G,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOC,KACjB,SAAAC,GAAC,OAAMA,EAAE6H,KAAOiD,EAAOtK,QAAQqH,GAAOiD,EAAOtK,QAAUR,OAInE,KAAKJ,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOiL,QACjB,SAAA/K,GAAC,OAAMA,EAAE6H,KAAO/D,EAAMyC,YAAYsB,MAEtCtB,YAAa,OAGrB,KAAK3G,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAO,aAAMgL,EAAOtK,WAG5B,KAAKZ,EACD,OAAO,eACAyB,IAGX,QACI,OAAOyC,IE/DfC,KHHuB,WAAqC,IAAnCD,EAAkC,uDAA1BzC,GAAcyJ,EAAY,uCAC3D,OAAQA,EAAOvK,MACX,KAAKX,EACD,OAAO,uCACAkE,GACAgH,EAAOtK,SAFd,IAGIiK,UAAU,IAGlB,KAAK7K,EACD,OAAO,2BACAkE,GADP,IAEI2G,UAAU,IAGlB,KAAK7K,EACD,MAAO,CACH6K,UAAU,GAGlB,QACI,OAAO3G,MIvBbkH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAG9FC,GAAQC,aACjBT,GACAI,GACIM,aAAiBC,QCGVC,GARK,WAChB,OACI,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,cAAC,GAAD,O,OCHZK,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.133e7315.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url )\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } )\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } )\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDelete: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    )\r\n\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST') // Endpoint '/events'\r\n            const body = await resp.json()\r\n    \r\n            if( body.ok ){\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew(event) )\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    // Se dispara unicamente si se graba en BD\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    // Actualiza en BD\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT')\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch( eventUpdated(event) )\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    // Actualiza el state (y el front)\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {activeEvent} = getState().calendar\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ activeEvent.id }`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch( eventDeleted() )\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    // Actualiza el state (y el front)\r\n    type: types.eventDelete\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events') // Endpoint '/events'\r\n            const body = await resp.json()\r\n\r\n            const events = prepareEvents( body.eventos )\r\n            dispatch( eventLoaded(events) )\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\"\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { eventLogout } from \"./events\"\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken( 'auth', {email, password}, 'POST' )\r\n        const body = await resp.json()\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', {name, email, password}, 'POST' )\r\n        const body = await resp.json()\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew')\r\n        const body = await resp.json()\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear()\r\n        dispatch( eventLogout() )\r\n        dispatch( logout() )\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    })\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n    \r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) )\r\n    }\r\n    \r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas tienen que coincidir', 'error')\r\n        }\r\n\r\n        dispatch( startRegister( rName, rEmail, rPassword1 ) )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form  onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nconst Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title } </strong>\r\n            <span>- { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours')\r\nconst nowPlus1 = now.clone().add(1,'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() )\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() )\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const { notes, title, start, end } = formValues\r\n\r\n    /* Traer la informacion de un evento activo */\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent )\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value  // target.name va con corchetes para que compute el nombre de la propiedad\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() )\r\n        dispatch( eventClearActiveEvent() )\r\n        setFormValues( initEvent )\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n        const momentStart = moment( start )\r\n        const momentEnd = moment( end )\r\n        \r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error', 'La fecha FIN debe ser mayor a la fecha de INICIO', 'error')\r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) )\r\n        }\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={ closeModal }\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger btn-sm fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\n\r\nimport Navbar from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport CalendarEvent from './CalendarEvent'\r\nimport CalendarModal from './CalendarModal'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport AddNewFab from '../ui/AddNewFab'\r\nimport { useSelector } from 'react-redux'\r\nimport DeleteEventFab from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\nconst CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' )\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() )\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    const onSelectEvent = ( e ) => {\r\n        dispatch( eventSetActive(e) )\r\n    }\r\n\r\n    const onViewChange = ( e ) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        /* Aca se puede implementar la creacion de un nuevo evento haciendo doble click en un slot vacio */\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            \r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab/>\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab/>\r\n            }\r\n\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest // Resto de propiedades (exact, path, etc.)\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest // Resto de propiedades (exact, path, etc.)\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { checking, uid } = useSelector( state => state.auth )\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() )\r\n    }, [dispatch])\r\n\r\n    if( checking ){\r\n      return (<h5>Espere, cargando...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n                <PublicRoute\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={ LoginScreen }\r\n                  isAuthenticated={ !!uid } // La doble negacion convierte un tipo String en un Boolean\r\n                />\r\n\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  component={ CalendarScreen }\r\n                  isAuthenticated={ !!uid } // La doble negacion convierte un tipo String en un Boolean\r\n                />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 4, 'hours' ).toDate(),\r\n//     notes: 'Comprar regalo',\r\n//     user: {\r\n//         _id: '321123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n            \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducers\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport AppRouter from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}